name: 🔍 Pull Request Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]

env:
  NODE_VERSION: '22'

jobs:
  # 📊 Analyse des changements PR
  pr-analysis:
    name: 📊 PR Impact Analysis
    runs-on: ubuntu-latest
    outputs:
      has-frontend-changes: ${{ steps.changes.outputs.frontend }}
      has-backend-changes: ${{ steps.changes.outputs.backend }}
      has-tests-changes: ${{ steps.changes.outputs.tests }}
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Detect Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'src/**'
              - 'public/**'
              - 'package*.json'
              - 'vite.config.ts'
              - 'tsconfig*.json'
            backend:
              - 'backend/**'
              - 'requirements.txt'
            tests:
              - 'src/**/*.test.*'
              - 'backend/tests/**'
              - 'jest.config.js'

  # ⚡ Tests rapides PR
  pr-quick-tests:
    name: ⚡ Quick PR Tests
    runs-on: ubuntu-latest
    needs: pr-analysis
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Lint Check
        run: |
          echo "🔍 Running linting checks..."
          # npm run lint || true

      - name: 🧪 Run Critical Tests
        if: needs.pr-analysis.outputs.has-frontend-changes == 'true'
        run: |
          echo "🧪 Running critical tests for PR..."
          npm test -- --watchAll=false --testPathPattern="critical"

      - name: 🏗️ Build Check
        run: |
          echo "🏗️ Verifying build..."
          npm run build

  # 📊 Bundle Size Comparison
  bundle-comparison:
    name: 📊 Bundle Size Impact
    runs-on: ubuntu-latest
    needs: pr-analysis
    if: needs.pr-analysis.outputs.has-frontend-changes == 'true'
    steps:
      - name: 📥 Checkout Base Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies (Base)
        run: npm ci

      - name: 🏗️ Build Base
        run: npm run build

      - name: 📊 Get Base Bundle Size
        id: base-size
        run: |
          BASE_SIZE=$(find dist/assets -name "index-*.js" -exec stat -c%s {} \; | head -1)
          echo "base-size=$((BASE_SIZE / 1024))" >> $GITHUB_OUTPUT

      - name: 📥 Checkout PR Branch
        uses: actions/checkout@v4

      - name: 📦 Install Dependencies (PR)
        run: npm ci

      - name: 🏗️ Build PR
        run: npm run build

      - name: 📊 Get PR Bundle Size
        id: pr-size
        run: |
          PR_SIZE=$(find dist/assets -name "index-*.js" -exec stat -c%s {} \; | head -1)
          echo "pr-size=$((PR_SIZE / 1024))" >> $GITHUB_OUTPUT

      - name: 📈 Compare Bundle Sizes
        run: |
          BASE_SIZE=${{ steps.base-size.outputs.base-size }}
          PR_SIZE=${{ steps.pr-size.outputs.pr-size }}
          DIFF=$((PR_SIZE - BASE_SIZE))
          PERCENT=$(( (DIFF * 100) / BASE_SIZE ))
          
          echo "📊 Bundle Size Comparison:"
          echo "Base: ${BASE_SIZE}KB"
          echo "PR: ${PR_SIZE}KB"
          echo "Difference: ${DIFF}KB (${PERCENT}%)"
          
          if [ $DIFF -gt 50 ]; then
            echo "⚠️ Bundle size increased significantly!"
            exit 1
          fi

  # 💬 PR Comment avec résultats
  pr-comment:
    name: 💬 PR Results Comment
    runs-on: ubuntu-latest
    needs: [pr-quick-tests, bundle-comparison]
    if: always()
    steps:
      - name: 💬 Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🤖 PR Analysis Results')
            );
            
            const body = `## 🤖 PR Analysis Results
            
            ### ✅ Tests Status
            - Quick Tests: ${{ needs.pr-quick-tests.result }}
            - Bundle Check: ${{ needs.bundle-comparison.result }}
            
            ### 📊 Impact Summary
            - Frontend Changes: ${{ needs.pr-analysis.outputs.has-frontend-changes }}
            - Backend Changes: ${{ needs.pr-analysis.outputs.has-backend-changes }}
            - Tests Changes: ${{ needs.pr-analysis.outputs.has-tests-changes }}
            
            ### 🎯 Next Steps
            ${needs.pr-quick-tests.result === 'success' ? '✅' : '❌'} All critical tests passing
            ${needs.bundle-comparison.result === 'success' ? '✅' : '❌'} Bundle size within limits
            
            *Last updated: ${new Date().toISOString()}*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
